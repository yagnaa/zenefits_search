{"version":3,"sources":["../../src/tests/promises.spec.js"],"names":[],"mappings":";;;;0BAAuB,YAAY;;;;AAEnC,IAAM,MAAM,GAAG,wBAAW,KAAK,EAAE,CAAC;;AAElC,QAAQ,CAAC,UAAU,EAAE,YAAM;;AAEvB,MAAE,CAAC,gDAAgD,EAAE,YAAM;;AAEvD,YAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC3C,cAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,CAAC;KAC/C,CAAC,CAAC;;AAEH,MAAE,CAAC,wDAAwD,EAAE,YAAM;;AAE/D,YAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AACtD,mBAAO,CAAC,EAAE,CAAC,CAAC;SACf,CAAC,CAAC;AACH,cAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,CAAC;KAC/C,CAAC,CAAC;;AAEH,MAAE,CAAC,mEAAmE,EAAE,YAAM;;AAE1E,YAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC3C,YAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC5C,YAAM,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;;AAEpD,cAAM,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,YAAY,CAAC,CAAC;KAC3C,CAAC,CAAC;;AAEH,MAAE,CAAC,sDAAsD,EAAE,YAAM;;AAE7D,YAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;mBAAI,MAAM,GAAG,CAAC;SAAA,CAAC,CAAC;;;KAGzE,CAAC,CAAC;CACN,CAAC,CAAC","file":"promises.spec.js","sourcesContent":["import Unexpected from 'unexpected';\n\nconst expect = Unexpected.clone();\n\ndescribe('promises', () => {\n\n    it('expect.promise.resolve is immediately resolved', () => {\n\n        const promise = expect.promise.resolve(42);\n        expect(promise.isFulfilled(), 'to be true');\n    });\n\n    it('expect.promise, then resolve() is immediately resolved', () => {\n\n        const promise = expect.promise(function (resolve, reject) {\n            resolve(42);\n        });\n        expect(promise.isFulfilled(), 'to be true');\n    });\n\n    it('expect.promise.all with resolved promises is immediately resolved', () => {\n\n        const promise = expect.promise.resolve(42);\n        const promise2 = expect.promise.resolve(24);\n        const all = expect.promise.all([promise, promise2]);\n\n        expect(all.isFulfilled(), 'to be true');\n    });\n\n    it('resolved promise with a then is immediately resolved', () => {\n        // This is it. Need to break the promises to be sync\n        const promise = expect.promise.resolve(42).then(result => result + 1);\n\n        // expect(promise.isFulfilled(), 'to be true');\n    });\n});\n"]}