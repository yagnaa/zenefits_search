{"version":3,"sources":["../../src/tests/mockEntities.js"],"names":[],"mappings":";;;;;;AACA,IAAM,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAC1C,IAAM,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAEtC,IAAM,mBAAmB,GAAG;;AAExB,8BAA0B,EAAA,oCAAC,IAAI,EAAE;AAC7B,YAAI,IAAI,CAAC,SAAS,KAAK,cAAc,EAAE;AACnC,kBAAM,IAAI,KAAK,CAAC,+CAA+C,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAC3F;KACJ;;AAED,WAAO,EAAA,iBAAC,IAAI,EAAE;AACV,YAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;AACtC,eAAO,IAAI,CAAC,IAAI,CAAC;KACpB;;AAED,iBAAa,EAAA,uBAAC,IAAI,EAAE;AAChB,YAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;AACtC,eAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;AAED,cAAU,EAAA,oBAAC,KAAK,EAAE;AACd,eAAO,cAAc,CAAC,KAAK,CAAC,CAAC;KAChC;;AAED,eAAW,EAAA,qBAAC,IAAI,EAAE;;;AACd,YAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;AACtC,eAAO,CAAC,AAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAK,EAAE,CAAA,CAAE,GAAG,CAAC,UAAA,IAAI;mBAAI,OAAO,IAAI,AAAC,KAAK,QAAQ,GAAG,MAAK,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI;SAAA,CAAC,CAAC;KACxI;;AAED,sBAAkB,EAAE,WAAW;CAClC,CAAC;;AAEF,IAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;;AAE7D,iBAAiB,CAAC,0BAA0B,GAAG,UAAA,IAAI,EAAI;AACnD,QAAI,IAAI,CAAC,OAAO,KAAK,YAAY,EAAE;AAC/B,cAAM,IAAI,KAAK,CAAC,2CAA2C,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,sBAAsB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAA,AAAC,CAAC,CAAC;KAChK;CACJ,CAAC;;AAEF,iBAAiB,CAAC,UAAU,GAAG,UAAS,KAAK,EAAE;AAC3C,WAAO,YAAY,CAAC,KAAK,CAAC,CAAC;CAC9B,CAAC;;AAGF,IAAM,YAAY,GAAG,SAAf,YAAY,CAAG,IAAI,EAAI;AACzB,QAAI,CAAC,OAAO,GAAG,YAAY,CAAC;AAC5B,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAG,IAAI,EAAI;AAC3B,QAAI,CAAC,SAAS,GAAG,cAAc,CAAC;AAChC,WAAO,IAAI,CAAC;CACf,CAAC;;QAGE,cAAc,GAAd,cAAc;QACd,YAAY,GAAZ,YAAY;QACZ,mBAAmB,GAAnB,mBAAmB;QACnB,iBAAiB,GAAjB,iBAAiB;QACjB,YAAY,GAAZ,YAAY;QACZ,cAAc,GAAd,cAAc","file":"mockEntities.js","sourcesContent":["\nconst expectedSymbol = Symbol('expected');\nconst actualSymbol = Symbol('actual');\n\nconst TestExpectedAdapter = {\n\n    _checkValidComponentPassed(comp) {\n        if (comp.$expected !== expectedSymbol) {\n            throw new Error('Non-expected type passed to expected adapter:' + JSON.stringify(comp));\n        }\n    },\n\n    getName(comp) {\n        this._checkValidComponentPassed(comp);\n        return comp.name;\n    },\n\n    getAttributes(comp) {\n        this._checkValidComponentPassed(comp);\n        return comp.attribs;\n    },\n\n    _wrapChild(child) {\n        return createExpected(child);\n    },\n\n    getChildren(comp) {\n        this._checkValidComponentPassed(comp);\n        return ((comp.children && [].concat([], comp.children)) || []).map(item => typeof(item) === 'object' ? this._wrapChild(item) : item);\n    },\n\n    classAttributeName: 'className'\n};\n\nconst TestActualAdapter = Object.create(TestExpectedAdapter);\n\nTestActualAdapter._checkValidComponentPassed = comp => {\n    if (comp.$actual !== actualSymbol) {\n        throw new Error('Non-actual type passed to actual adapter:' + JSON.stringify(comp) + ' expectedSymbol was ' + (comp.$expected && comp.$expected.toString()));\n    }\n};\n\nTestActualAdapter._wrapChild = function(child) {\n    return createActual(child);\n};\n\n\nconst createActual = desc => {\n    desc.$actual = actualSymbol;\n    return desc;\n};\n\nconst createExpected = desc => {\n    desc.$expected = expectedSymbol;\n    return desc;\n};\n\nexport {\n    expectedSymbol,\n    actualSymbol,\n    TestExpectedAdapter,\n    TestActualAdapter,\n    createActual,\n    createExpected\n};\n"]}