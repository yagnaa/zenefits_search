{"version":3,"sources":["../src/array-changes.js"],"names":[],"mappings":"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","file":"array-changes.js","sourcesContent":["// This code originally taken from array-changes https://github.com/unexpectedjs/array-changes\n\n// Adapter to allow for promises\n\nvar arrayDiff = require('arraydiff');\nvar Promise = require('bluebird');\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i += 1) {\n        var source = arguments[i];\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    }\n    return target;\n}\n\nmodule.exports = function arrayChanges(actual, expected, equal, similar) {\n    var mutatedArray = new Array(actual.length);\n\n    for (var k = 0; k < actual.length; k += 1) {\n        mutatedArray[k] = {\n            type: 'similar',\n            value: actual[k]\n        };\n    }\n\n    if (mutatedArray.length > 0) {\n        mutatedArray[mutatedArray.length - 1].last = true;\n    }\n\n    similar = similar || function (a, b) {\n            return Promise.resolve(false);\n        };\n\n    var itemsDiff = arrayDiff([].concat(actual), [].concat(expected), function (a, b) {\n        return equal(a, b) || similar(a, b);\n    });\n\n    var removeTable = [];\n    function offsetIndex(index) {\n        return index + (removeTable[index - 1] || 0);\n    }\n\n    var removes = itemsDiff.filter(function (diffItem) {\n        return diffItem.type === 'remove';\n    });\n\n    var removesByIndex = {};\n    var removedItems = 0;\n    removes.forEach(function (diffItem) {\n        var removeIndex = removedItems + diffItem.index;\n        mutatedArray.slice(removeIndex, diffItem.howMany + removeIndex).forEach(function (v) {\n            v.type = 'remove';\n        });\n        removedItems += diffItem.howMany;\n        removesByIndex[diffItem.index] = removedItems;\n    });\n\n    function updateRemoveTable() {\n        removedItems = 0;\n        Array.prototype.forEach.call(actual, function (_, index) {\n            removedItems += removesByIndex[index] || 0;\n            removeTable[index] = removedItems;\n        });\n    }\n\n    updateRemoveTable();\n\n    var moves = itemsDiff.filter(function (diffItem) {\n        return diffItem.type === 'move';\n    });\n\n    var movedItems = 0;\n    moves.forEach(function (diffItem) {\n        var moveFromIndex = offsetIndex(diffItem.from);\n        var removed = mutatedArray.slice(moveFromIndex, diffItem.howMany + moveFromIndex);\n        var added = removed.map(function (v) {\n            return extend({}, v, { last: false, type: 'insert' });\n        });\n        removed.forEach(function (v) {\n            v.type = 'remove';\n        });\n        Array.prototype.splice.apply(mutatedArray, [offsetIndex(diffItem.to), 0].concat(added));\n        movedItems += diffItem.howMany;\n        removesByIndex[diffItem.from] = movedItems;\n        updateRemoveTable();\n    });\n\n    var inserts = itemsDiff.filter(function (diffItem) {\n        return diffItem.type === 'insert';\n    });\n\n    inserts.forEach(function (diffItem) {\n        var added = new Array(diffItem.values.length);\n        for (var i = 0 ; i < diffItem.values.length ; i += 1) {\n            added[i] = {\n                type: 'insert',\n                value: diffItem.vlues[i]\n            };\n        }\n        Array.prototype.splice.apply(mutatedArray, [offsetIndex(diffItem.index), 0].concat(added));\n    });\n\n    var offset = 0;\n    mutatedArray.forEach(function (diffItem, index) {\n        var type = diffItem.type;\n        if (type === 'remove') {\n            offset -= 1;\n        } else if (type === 'similar') {\n            diffItem.expected = expected[offset + index];\n        }\n    });\n\n    var conflicts = mutatedArray.reduce(function (conflicts, item) {\n        return item.type === 'similar' ? conflicts : conflicts + 1;\n    }, 0);\n\n    for (var i = 0, c = 0; i < Math.max(actual.length, expected.length) &&  c <= conflicts; i += 1) {\n        var expectedType = typeof expected[i];\n        var actualType = typeof actual[i];\n\n        if (\n            actualType !== expectedType ||\n            ((actualType === 'object' || actualType === 'string') && !similar(actual[i], expected[i])) ||\n            (actualType !== 'object' && actualType !== 'string' && !equal(actual[i], expected[i]))\n        ) {\n            c += 1;\n        }\n    }\n\n    if (c <= conflicts) {\n        mutatedArray = [];\n        var j;\n        for (j = 0; j < Math.min(actual.length, expected.length); j += 1) {\n            mutatedArray.push({\n                type: 'similar',\n                value: actual[j],\n                expected: expected[j]\n            });\n        }\n\n        if (actual.length < expected.length) {\n            for (; j < Math.max(actual.length, expected.length); j += 1) {\n                mutatedArray.push({\n                    type: 'insert',\n                    value: expected[j]\n                });\n            }\n        } else {\n            for (; j < Math.max(actual.length, expected.length); j += 1) {\n                mutatedArray.push({\n                    type: 'remove',\n                    value: actual[j]\n                });\n            }\n        }\n        if (mutatedArray.length > 0) {\n            mutatedArray[mutatedArray.length - 1].last = true;\n        }\n    }\n\n    mutatedArray.forEach(function (diffItem) {\n        if (diffItem.type === 'similar' && equal(diffItem.value, diffItem.expected)) {\n            diffItem.type = 'equal';\n        }\n    });\n\n    return mutatedArray;\n};"]}