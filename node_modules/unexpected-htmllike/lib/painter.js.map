{"version":3,"sources":["../src/painter.js"],"names":[],"mappings":"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","file":"painter.js","sourcesContent":["\nimport LineBreaker from './lineBreaker';\nimport isNativeType from './isNativeType';\n\nconst WRAP_WIDTH = 80;\n\nexport default function painter(pen, description, diffFn, inspect) {\n\n    if (description.diff) {\n\n        switch(description.diff.type) {\n            case 'missing':\n                pen.forceLineBreakBefore();\n                pen.annotationBlock(function () {\n                    this.error('missing').sp();\n                    if (typeof description.diff.actualIndex === 'number') {\n                        this.error('(found at index ' + description.diff.actualIndex + ')').sp();\n                    }\n                    this.block(function () {\n                        painter(this, {\n                            type: description.type,\n                            name: description.name,\n                            value: description.value,\n                            attributes: description.attributes,\n                            children: description.children\n                        }, diffFn, inspect);\n                    });\n                });\n                return;\n\n            case 'extra':\n                pen.forceLineBreakBefore();\n                const removedElementPen = pen.clone();\n\n                painter(removedElementPen, {\n                    type: description.type,\n                    name: description.name,\n                    value: description.value,\n                    attributes: description.attributes,\n                    children: description.children\n                }, diffFn, inspect);\n                pen.block(removedElementPen).sp().annotationBlock(function () {\n                    this.error('should be removed');\n                    this.nl(removedElementPen.size().height - 1).i();\n                });\n                return;\n\n            case 'wrapper':\n                pen.prismPunctuation('<')\n                    .prismTag(description.name);\n                if (description.attributes) {\n                    outputAttributes(pen, description.attributes, inspect, diffFn);\n                }\n                pen.prismPunctuation('>')\n                    .sp()\n                    .annotationBlock(function () {\n                        this.error('wrapper should be removed');\n                    });\n\n                outputChildren(pen, description, inspect, diffFn, true);\n                pen.prismPunctuation('</')\n                    .prismTag(description.name)\n                    .prismPunctuation('>').sp().annotationBlock(function () {\n                    this.error('wrapper should be removed');\n                });\n                return;\n\n            case 'differentElement':\n                pen.prismPunctuation('<')\n                    .prismTag(description.name)\n                    .sp().annotationBlock(function () {\n                    this.error('should be').sp().prismPunctuation('<')\n                    .prismTag(description.diff.expectedName);\n                });\n                if (description.attributes) {\n                    pen.nl().indentLines();\n                    if (description.attributes && description.attributes.length) {\n                        pen.i();\n                        outputAttributes(pen, description.attributes, inspect, diffFn);\n                    }\n                    pen.outdentLines();\n                } else {\n                    pen.nl().i();\n                }\n\n                if (description.children && description.children.length) {\n                    pen.prismPunctuation('>');\n                    outputChildren(pen, description, inspect, diffFn, true);\n                    pen.prismPunctuation('</')\n                        .prismTag(description.name)\n                        .prismPunctuation('>');\n                } else {\n                    pen.prismPunctuation('/>');\n                }\n                return;\n\n            case 'contentElementMismatch':\n                if (pen.forceLineBreakBefore) {\n                    pen.forceLineBreakBefore();\n                }\n                pen.text(description.value).sp().annotationBlock(function () {\n                    this.error('should be').sp();\n                    const expectedPen = pen.clone();\n                    painter(expectedPen, description.diff.expected, diffFn, inspect);\n                    this.block(expectedPen);\n                });\n                return;\n\n            case 'elementContentMismatch':\n                const elementPen = pen.clone();\n                outputElement(elementPen, description, inspect, diffFn);\n                if (pen.forceLineBreakBefore) {\n                    pen.forceLineBreakBefore();\n                }\n                pen.block(elementPen).sp().annotationBlock(function () {\n                    this.error('should be')\n                        .sp()\n                        .append(inspect(description.diff.expected.value))\n                        .nl(elementPen.size().height - 1);\n                });\n                return;\n        }\n\n    }\n\n\n    switch(description.type) {\n\n        case 'ELEMENT':\n            outputElement(pen, description, inspect, diffFn);\n            break;\n\n        case 'WRAPPERELEMENT':\n            outputWrapperElement(pen, description, inspect, diffFn);\n            break;\n\n        case 'CONTENT':\n            if (description.diff) {\n                switch(description.diff.type) {\n                    case 'changed':\n                        const expectedString = '' + description.diff.expectedValue;\n                        const actualString = '' + description.value;\n                        pen.block(function () {\n                            if (expectedString === actualString) {\n                                this.block(function () {\n                                    this.text(actualString);\n                                }).sp().annotationBlock(function () {\n                                    this.error('mismatched type').sp().block(diffFn(typeof description.value, typeof description.diff.expectedValue).diff);\n                                });\n                            } else if (typeof description.value === typeof description.diff.expectedValue) {\n                                this.block(actualString).sp().annotationBlock(function () { \n                                    const valueDiff = diffFn(description.value, description.diff.expectedValue);\n                                    if (valueDiff) {\n                                        this.append(valueDiff.diff); \n                                    } else {\n                                        this.append(function () {\n                                            this.error('should be').sp().text(description.diff.expectedValue).forceLineBreakBefore();\n                                        });\n                                    }\n                                });\n                            } else {\n                                this.block(function () {\n                                    this.append(diffFn('' + description.value, '' + description.diff.expectedValue).diff);\n                                }).sp().annotationBlock(function () {\n                                    this.error('and mismatched type').sp().block(diffFn(typeof description.value, typeof description.diff.expectedValue).diff);\n                                });\n                            }\n                        });\n                        break;\n\n                    case 'custom':\n\n                        pen.text(description.value).sp().annotationBlock(function () {\n                            this.append(description.diff.error.getErrorMessage(pen));\n                        });\n                        if (pen.forceLineBreak) {\n                            pen.forceLineBreakBefore();\n                        }\n                        break;\n\n                }\n            } else if (typeof description.value === 'function' && description.value._expectIt) {\n                pen.prismPunctuation('{').append(inspect(description.value)).prismPunctuation('}');\n            } else {\n                pen.text(description.value);\n            }\n            break;\n    }\n}\n\nfunction outputElement(pen, description, inspect, diffFn) {\n\n    pen.prismPunctuation('<')\n        .prismTag(description.name);\n\n    let needSpaceBeforeSelfClose = true;\n    let forceChildrenOnNewLine = false;\n    let needNewLineBeforeClose = false;\n    if (description.attributes) {\n        const attributeResult = outputAttributes(pen, description.attributes, inspect, diffFn);\n\n        if (attributeResult.size.height > 1) {\n            needSpaceBeforeSelfClose = false;\n            forceChildrenOnNewLine = true;\n            if (!attributeResult.breakAfter) {\n                needNewLineBeforeClose = true;\n            }\n        }\n    }\n\n\n    if (!description.children || description.children.length === 0) {\n        if (needSpaceBeforeSelfClose) {\n            pen.sp();\n        }\n\n        if (needNewLineBeforeClose) {\n            pen.nl().i();\n        }\n        pen.prismPunctuation('/>');\n    } else {\n\n        pen.prismPunctuation('>');\n        outputChildren(pen, description, inspect, diffFn, forceChildrenOnNewLine);\n\n        pen.prismPunctuation('</')\n            .prismTag(description.name)\n            .prismPunctuation('>');\n\n    }\n}\n\nfunction outputWrapperElement(pen, description, inspect, diffFn) {\n\n    pen.gray('<')\n        .gray(description.name);\n\n    if (description.attributes) {\n        const attribPen = pen.clone();\n        outputAttributes(attribPen, description.attributes, inspect, diffFn);\n        attribPen.replaceText(function (styles, text) {\n            this.text(text, 'gray');\n        });\n        pen.append(attribPen);\n    }\n\n\n    pen.gray('>');\n    outputChildren(pen, description, inspect, diffFn, true);\n\n    pen.gray('</')\n        .gray(description.name)\n        .gray('>');\n\n}\n\nfunction outputChildren(pen, description, inspect, diffFn, forcedOnNewLine) {\n\n    const childrenOutput = LineBreaker.breakAt(pen, WRAP_WIDTH);\n    for (let childIndex = 0; childIndex < description.children.length; ++childIndex) {\n        const child = description.children[childIndex];\n\n        childrenOutput.add(childPen => {\n            painter(childPen, child, diffFn, inspect);\n        });\n    }\n    const childrenResultOutput = childrenOutput.getOutput();\n    const childrenSize = childrenResultOutput.output.size();\n\n    let childrenOnSeparateLines = false;\n    if (forcedOnNewLine ||\n        childrenResultOutput.breakAfter ||\n        childrenResultOutput.breakBefore ||\n        childrenSize.height > 1 ||\n        (childrenSize.width + pen.size().width) >= WRAP_WIDTH) {\n        pen.indentLines().nl().i();\n        childrenOnSeparateLines = true;\n    }\n\n    pen.block(childrenResultOutput.output);\n\n    if (childrenOnSeparateLines) {\n        pen.outdentLines().nl().i();\n    }\n}\n\nfunction outputAttribute(pen, name, value, diff, inspect, diffFn) {\n\n\n    if (diff) {\n        pen.sp();\n        switch(diff.type) {\n            case 'changed':\n                outputRawAttribute(pen, name, value, inspect);\n                pen.sp().annotationBlock(pen => {\n                    if (diff.error) {\n                        pen.append(diff.error.getErrorMessage(pen));\n                    } else {\n                        pen.error('should be ');\n                        outputRawAttribute(pen, name, diff.expectedValue, inspect);\n                        if (typeof value === typeof diff.expectedValue && typeof value !== 'boolean') {\n\n                            const valueDiff = diffFn(value, diff.expectedValue);\n\n                            if (valueDiff && valueDiff.inline) {\n                                pen.nl().block(valueDiff.diff);\n                            } else if (valueDiff) {\n                                pen.nl().block(function () {\n                                    this.append(valueDiff.diff);\n                                });\n                            } else {\n                                pen.nl().block(function () {\n                                    this.append(inspect(diff.expectedValue));\n                                });\n                            }\n                        }\n                    }\n                }).forceLineBreak();\n                break;\n\n            case 'custom':\n                outputRawAttribute(pen, name, value, inspect);\n                pen.sp().annotationBlock(pen => {\n                    pen.addStyle('appendInspected', function (arg) {\n                        this.append(inspect(arg));\n                    }, true);\n                    pen.block(diff.error.getErrorMessage(pen));\n                }).forceLineBreak();\n\n                break;\n            case 'missing':\n                pen.annotationBlock(pen => {\n                    pen.error('missing ');\n                    outputRawAttribute(pen, name, diff.expectedValue, inspect);\n                }).forceLineBreak();\n                break;\n\n            case 'extra':\n                outputRawAttribute(pen, name, value, inspect, diff);\n                pen.sp().annotationBlock(pen => {\n                    pen.prismAttrName(name)\n                        .sp()\n                        .error('should be removed');\n                }).forceLineBreak();\n                break;\n\n            case 'class':\n                outputRawAttribute(pen, name, value, inspect, diff);\n                pen.sp().annotationBlock(pen => {\n                    if (diff.missing) {\n                        pen.error('missing class' + (diff.missing.indexOf(' ') !== -1 ? 'es' : '')).sp().append(inspect(diff.missing));\n                    }\n                    if (diff.extra) {\n                        if (diff.missing) {\n                            pen.nl().i();\n                        }\n                        pen.error('extra class' + (diff.extra.indexOf(' ') !== -1 ? 'es' : '')).sp().append(inspect(diff.extra));\n                    }\n                }).forceLineBreak();\n        }\n    } else if (value !== undefined) {\n        pen.sp();\n        outputRawAttribute(pen, name, value, inspect);\n    }\n}\n\nfunction outputRawAttribute(pen, name, value, inspect) {\n\n    pen.prismAttrName(name)\n        .prismPunctuation('=');\n\n\n    switch(typeof value) {\n        case 'string':\n            pen.prismPunctuation('\"')\n                .prismAttrValue(value)\n                .prismPunctuation('\"');\n            break;\n\n        case 'function':\n            pen.prismPunctuation('{');\n            outputFunctionAttribute(pen, value, inspect);\n            pen.prismPunctuation('}');\n            break;\n        default:\n            pen.prismPunctuation('{')\n                .append(inspect(value))\n                .prismPunctuation('}');\n            break;\n    }\n}\n\nfunction outputFunctionAttribute(pen, value, inspect) {\n\n    if (value._expectIt) {\n        pen.append(inspect(value));\n        return;\n    }\n    \n    if (value && typeof value.toString === 'function') {\n        var source = value.toString();\n        var matchSource = source.match(/^\\s*function (\\w*?)\\s*\\(([^\\)]*)\\)\\s*\\{([\\s\\S]*?( *)?)\\}\\s*$/);\n        if (matchSource) {\n            var name = (typeof value.name === 'string' && value.name) || matchSource[1];\n            var args = matchSource[2];\n            var body = matchSource[3];\n            if (body.indexOf('\\n') !== -1 || body.length > 30) {\n                pen.prismKeyword('function ')\n                    .prismVariable(name)\n                    .prismPunctuation('(')\n                    .prismVariable(args)\n                    .prismPunctuation(') { /* ... */ }');\n            } else {\n                pen.append(inspect(value));\n            }\n        } else {\n            if (source && source.length < 30) {\n                pen.append('function ').append(source);\n            } \n        }\n    } else {\n        pen.append(inspect(value));\n    }\n\n}\n\nfunction outputAttributes(pen, attributes, inspect, diffFn) {\n    const attribOutput = LineBreaker.breakAt(pen, WRAP_WIDTH);\n    attribOutput.add(pen => pen.indentOnBreak());\n\n    attributes.forEach(attrib => {\n        attribOutput.add(pen => {\n            outputAttribute(pen, attrib.name, attrib.value, attrib.diff, inspect, diffFn);\n        });\n    });\n\n    const attribResult = attribOutput.getOutput({ groupContent: true, appendBreakIfHadBreaks: false });\n    pen.append(attribResult.output);\n    return {\n        size: attribResult.output.size(),\n        breakAfter: attribResult.breakAfter\n    };\n}\n"]}