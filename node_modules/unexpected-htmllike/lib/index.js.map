{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;oBACiB,QAAQ;;;;uBACL,WAAW;;;;wBACV,YAAY;;;;6BACP,iBAAiB;;;;AAE3C,SAAS,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAE;;AAE/D,QAAM,eAAe,GAAG,gCAAc,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,8BAAQ,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,iBAAiB,CAAC,CAAC;AAC1D,WAAO,MAAM,CAAC;CACjB;;AAED,SAAS,OAAO,CAAC,aAAa,EAAE;;AAE5B,WAAO,UAAU,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEjE,eAAO,kBAAK,YAAY,CAAC,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KAC/F,CAAC;CACL;;AAGD,SAAS,WAAW,CAAC,aAAa,EAAE;;AAEhC,WAAO,UAAU,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEjE,eAAO,2BAAS,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;KACtF,CAAC;CACL;;AAGD,SAAS,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC/C,8BAAQ,MAAM,EAAE,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAChD,WAAO,MAAM,CAAC;CACjB;;AAGD,SAAS,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE;;AAElC,QAAI,MAAM,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;;;AAG7C,YAAI,MAAM,CAAC,UAAU,EAAE,EAAE;AACrB,mBAAO,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;;AAED,eAAO,MAAM,CAAC,IAAI,CAAC,UAAA,QAAQ,EAAI;AAC3B,mBAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC7B,CAAC,CAAC;KACN;;AAED,WAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;CAC3B;;AAGD,SAAS,kBAAkB,CAAC,OAAO,EAAE;;AAEjC,WAAO;AACH,eAAO,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACpC,YAAI,EAAE,OAAO,CAAC,OAAO,CAAC;AACtB,gBAAQ,EAAE,WAAW,CAAC,OAAO,CAAC;AAC9B,cAAM,EAAE,MAAM;AACd,kBAAU,EAAE,UAAU;KACzB,CAAC;CACL;;AAED,kBAAkB,CAAC,cAAc,GAAG,kBAAK,cAAc,CAAC;;qBAEzC,kBAAkB","file":"index.js","sourcesContent":["\nimport diff from './diff';\nimport Painter from './painter';\nimport Contains from './contains';\nimport convertToDiff from './convertToDiff';\n\nfunction inspect(adapter, value, depth, output, externalInspector) {\n\n    const diffDescription = convertToDiff(adapter, value);\n    Painter(output, diffDescription, null, externalInspector);\n    return output;\n}\n\nfunction getDiff(actualAdapter) {\n\n    return function (expectedAdapter, actual, expected, expect, options) {\n\n        return diff.diffElements(actualAdapter, expectedAdapter, actual, expected, expect, options);\n    };\n}\n\n\nfunction getContains(actualAdapter) {\n\n    return function (expectedAdapter, actual, expected, expect, options) {\n\n        return Contains(actualAdapter, expectedAdapter, actual, expected, expect, options);\n    };\n}\n\n\nfunction render(diffResult, output, diff, inspect) {\n    Painter(output, diffResult.diff, diff, inspect);\n    return output;\n}\n\n\nfunction withResult(result, callback) {\n\n    if (result && typeof result.then === 'function') {\n        // Result was a promise, must have been async\n        // If it's a sync promise, callback immediately with the value\n        if (result.isResolved()) {\n            return callback(result.value);\n        }\n\n        return result.then(resolved => {\n            return callback(resolved);\n        });\n    }\n\n    return callback(result);\n}\n\n\nfunction HtmlLikeUnexpected(adapter) {\n\n    return {\n        inspect: inspect.bind(null, adapter),\n        diff: getDiff(adapter),\n        contains: getContains(adapter),\n        render: render,\n        withResult: withResult\n    };\n}\n\nHtmlLikeUnexpected.DefaultWeights = diff.DefaultWeights;\n\nexport default HtmlLikeUnexpected;"]}