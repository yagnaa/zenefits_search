{"version":3,"sources":["../src/Weights.js"],"names":[],"mappings":";;AACA,IAAI,MAAM,GAAG,IAAI,CAAC;;AAElB,SAAS,OAAO,GAAG;AACf,QAAI,CAAC,MAAM,GAAG,EAAE,MAAM,CAAC;AACvB,QAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACd,QAAI,CAAC,KAAK,GAAG,CAAC,CAAC;CAClB;;AAED,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,MAAM,EAAE;AACtC,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC5B,cAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;KACpD;;AAED,QAAI,CAAC,IAAI,IAAI,MAAM,CAAC;AACpB,QAAI,CAAC,KAAK,IAAI,MAAM,CAAC;AACrB,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AAC1C,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC5B,cAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;KACxD;AACD,QAAI,CAAC,IAAI,IAAI,MAAM,CAAC;;AAEpB,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE;AAC3C,QAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAC5B,cAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACzD;AACD,QAAI,CAAC,KAAK,IAAI,MAAM,CAAC;;AAErB,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE;AAC5C,QAAI,CAAC,MAAM,YAAY,OAAO,EAAE;AAC5B,cAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;KAClE;AACD,QAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC;AACzB,QAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC;;;AAG3B,QAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAClB,cAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;KACjC;AACD,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;AACxC,QAAI,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC;AAC5C,WAAO,IAAI,CAAC;CACf,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"Weights.js","sourcesContent":["\nlet unique = 1000;\n\nfunction Weights() {\n    this.unique = ++unique;\n    this.real = 0;\n    this.total = 0;\n}\n\nWeights.prototype.add = function (weight) {\n    if (typeof weight !== 'number') {\n        throw new Error('add takes a numeric parameter');\n    }\n//    console.log('Adding ', weight, 'to', this.name, 'results in ', this.total, this.real);\n    this.real += weight;\n    this.total += weight;\n    return this;\n};\n\nWeights.prototype.addReal = function (weight) {\n    if (typeof weight !== 'number') {\n        throw new Error('addReal takes a numeric parameter');\n    }\n    this.real += weight;\n    //console.log('Adding real', weight, 'to', this.name, 'results in', this.real);\n    return this;\n};\n\nWeights.prototype.addTotal = function (weight) {\n    if (typeof weight !== 'number') {\n        throw new Error('addTotal takes a numeric parameter');\n    }\n    this.total += weight;\n    //console.log('Adding total', weight, 'to', this.name, 'results in', this.total);\n    return this;\n};\n\nWeights.prototype.addWeight = function (weight) {\n    if (!weight instanceof Weights) {\n        throw new Error('addWeight can only add other Weight objects');\n    }\n    this.real += weight.real;\n    this.total += weight.total;\n    //console.log('Adding total', weight.total, 'and real', weight.real, 'to', this.name, 'results in (total/real)', this.total, this.real);\n\n    if (isNaN(this.real)) {\n        throw new Error('caused nan');\n    }\n    return this;\n};\n\nWeights.prototype.setName = function (name) {\n    this.name = '(' + this.unique + ') ' + name;\n    return this;\n};\n\nmodule.exports = Weights;"]}