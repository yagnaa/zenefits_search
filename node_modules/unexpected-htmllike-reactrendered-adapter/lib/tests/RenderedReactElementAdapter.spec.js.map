{"version":3,"sources":["../../src/tests/RenderedReactElementAdapter.spec.js"],"names":[],"mappings":"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","file":"RenderedReactElementAdapter.spec.js","sourcesContent":["import '../testHelpers/emulateDom';\nimport RenderedReactElementAdapter from '../RenderedReactElementAdapter';\nimport GlobalHook from 'react-render-hook';\nimport Unexpected from 'unexpected';\nimport React from 'react';\nimport TestUtils from 'react-addons-test-utils';\n\nconst expect = Unexpected.clone();\n\nconst Simple = React.createClass({\n    render() {\n        return (\n            <span id={this.props.id}>{this.props.text}</span>\n        );\n    }\n});\n\nconst TestComponent = React.createClass({\n    render() {\n        return (\n            <div className=\"test\">\n                <Simple id=\"1\" text=\"one\" />\n                <Simple id=\"2\" text=\"two\" />\n            </div>\n        );\n    }\n\n});\n\ndescribe('RenderedReactElementadapter', () => {\n\n    let component;\n    let adapter;\n    beforeEach(() => {\n\n        adapter = new RenderedReactElementAdapter();\n        const renderedComponent = TestUtils.renderIntoDocument(<TestComponent className=\"foo\" />)\n\n        component = GlobalHook.findComponent(renderedComponent);\n    });\n\n    it('finds the name of the rendered component', () => {\n        expect(adapter.getName(component), 'to equal', 'TestComponent');\n    });\n\n    it('finds the div child of the top level component', () => {\n        expect(adapter.getChildren(component), 'to have length', 1);\n    });\n\n    it('finds the attributes of the top level component', () => {\n\n        expect(adapter.getAttributes(component), 'to equal', {\n            className: 'foo'\n        });\n    });\n\n    describe(\"component's children\", () => {\n        let children;\n\n        beforeEach(() => {\n\n            children = adapter.getChildren(component);\n        });\n\n        it('finds the name of the native child element of the main component', () => {\n            expect(adapter.getName(children[0]), 'to equal', 'div');\n        });\n\n        it('finds the children of the native child element of the main component', () => {\n            expect(adapter.getChildren(children[0]), 'to have length', 2);\n        });\n\n        describe(\"'s children\", () => {\n\n            let grandchildren;\n            beforeEach(() => {\n\n                grandchildren = adapter.getChildren(children[0]);\n            });\n\n\n            it('finds the name of the custom component as a grandchild of the main component', () => {\n                expect(adapter.getName(grandchildren[0]), 'to equal', 'Simple');\n            });\n\n            it('finds the attributes of the custom component as a grandchild of the main component', () => {\n                expect(adapter.getAttributes(grandchildren[0]), 'to equal', {\n                    id: '1',\n                    text: 'one'\n                });\n                expect(adapter.getAttributes(grandchildren[1]), 'to equal', {\n                    id: '2',\n                    text: 'two'\n                });\n            });\n\n            describe('rendered children of rendered custom component', () => {\n\n                let greatgrandchildren;\n                let greatgrandchildren2;\n\n                beforeEach(() => {\n\n                    greatgrandchildren = adapter.getChildren(grandchildren[0]);\n                    greatgrandchildren2 = adapter.getChildren(grandchildren[1]);\n                });\n\n                it('finds the name of the greatgrandchildren', () => {\n\n                    expect(adapter.getName(greatgrandchildren[0]), 'to equal', 'span');\n                    expect(adapter.getName(greatgrandchildren2[0]), 'to equal', 'span');\n                });\n\n                it('finds the attributes of the greatgrandchildren', () => {\n\n                    expect(adapter.getAttributes(greatgrandchildren[0]), 'to equal', { id: '1' });\n                    expect(adapter.getAttributes(greatgrandchildren2[0]), 'to equal', { id: '2' });\n                });\n\n                it('returns the text content of the greatgrandchildren', () => {\n\n                    expect(adapter.getChildren(greatgrandchildren[0]), 'to equal', [ 'one' ]);\n                    expect(adapter.getChildren(greatgrandchildren2[0]), 'to equal', [ 'two' ]);\n                });\n            });\n        });\n    });\n\n\n    describe('text content', () => {\n\n        let SingleContentComponent, DualContentComponent, MultiContentComponent, MixedContentComponent;\n        beforeEach(() => {\n\n            MultiContentComponent = React.createClass({\n                render() {\n\n                    return (\n                        <button>\n                            Button clicked {this.props.count} times\n                        </button>\n                    )\n                }\n            });\n\n            SingleContentComponent = React.createClass({\n                render() { return ( <div>{this.props.content}</div> ) }\n            });\n\n            DualContentComponent = React.createClass({\n                render() { return ( <div>{this.props.content1}{this.props.content2}</div> ) }\n            });\n\n            MixedContentComponent = React.createClass({\n                render() { return ( <div>{this.props.content1}<span>centre</span>{this.props.content2}</div> ) }\n            });\n\n            const renderedComponent = TestUtils.renderIntoDocument(<MultiContentComponent count={10} />);\n            component = GlobalHook.findComponent(renderedComponent);\n        });\n\n\n\n        it('renders the text individually', () => {\n            const button = adapter.getChildren(component)[0];\n            const children = adapter.getChildren(button);\n            expect(children, 'to equal', [ 'Button clicked ', '10', ' times' ]);\n        });\n\n        it('concatenates the text when concatTextContent option is set', () => {\n\n            adapter.setOptions({ concatTextContent: true });\n            const button = adapter.getChildren(component)[0];\n            const children = adapter.getChildren(button);\n            expect(children, 'to equal', [ 'Button clicked 10 times' ]);\n        });\n\n        it('ignores content with null ', () => {\n\n            const renderedComponent = TestUtils.renderIntoDocument(<MultiContentComponent count={null} />);\n            component = GlobalHook.findComponent(renderedComponent);\n            const button = adapter.getChildren(component)[0];\n            const children = adapter.getChildren(button);\n            expect(children, 'to equal', [ 'Button clicked ', ' times' ]);\n        });\n\n        it('concatenates content with null when concatTextContent is true', () => {\n\n            const renderedComponent = TestUtils.renderIntoDocument(<MultiContentComponent count={null} />);\n            component = GlobalHook.findComponent(renderedComponent);\n            adapter.setOptions({ concatTextContent: true });\n            const button = adapter.getChildren(component)[0];\n            const children = adapter.getChildren(button);\n            expect(children, 'to equal', [ 'Button clicked  times' ]);\n        });\n\n        it('returns a single content item as the original type', () => {\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<SingleContentComponent content={42} />));\n\n            const theDiv = adapter.getChildren(component)[0];\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ 42 ]);\n        });\n\n        it('returns a single content item as a string when using `convertToString:true`', () => {\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<SingleContentComponent content={42} />));\n            adapter.setOptions({ convertToString: true })\n            const theDiv = adapter.getChildren(component)[0];\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '42' ]);\n        });\n\n        it('returns the two content items as strings', () => {\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<DualContentComponent content1={42} content2={43} />));\n\n            const theDiv = adapter.getChildren(component)[0];\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '42', '43' ]);\n        });\n\n        it('returns the 2 content items in mixed children as strings', () => {\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<MixedContentComponent content1={42} content2={43} />));\n\n            const theDiv = adapter.getChildren(component)[0];\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '42', expect.it('to be an', 'object'), '43' ]);\n        });\n\n        it('has the correct classAttributeName property', () => {\n\n            expect(adapter.classAttributeName, 'to equal', 'className');\n        });\n\n        it('returns numerical content as a string when convertToString is true', () => {\n\n            const TestComponent = React.createClass({\n                render() {\n                    return <div>{42}</div>;\n                }\n            });\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<TestComponent />));\n            const theDiv = adapter.getChildren(component)[0];\n            adapter.setOptions({ convertToString: true })\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '42' ])\n        });\n\n        it('returns concatenates numerical content when convertToString and concatTextContent is true', () => {\n\n            const TestComponent = React.createClass({\n                render() {\n                    return <div>{4}{2}</div>;\n                }\n            });\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<TestComponent />));\n            const theDiv = adapter.getChildren(component)[0];\n            adapter.setOptions({ convertToString: true, concatTextContent: true });\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '42' ])\n        });\n\n        it('ignores null content with numerical children when concatenating', () => {\n\n            const TestComponent = React.createClass({\n                render() {\n                    return <div>{4}{null}</div>;\n                }\n            });\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<TestComponent />));\n            const theDiv = adapter.getChildren(component)[0];\n            adapter.setOptions({ convertToString: true, concatTextContent: true });\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '4' ])\n        });\n        \n        it('ignores null content with numerical children when not concatenating', () => {\n\n            const TestComponent = React.createClass({\n                render() {\n                    return <div>{4}{null}</div>;\n                }\n            });\n \n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<TestComponent />));\n            const theDiv = adapter.getChildren(component)[0];\n            adapter.setOptions({ convertToString: true });\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ '4' ])\n        });\n        \n        it('treats a zero as a normal number', () => {\n\n            const TestComponent = React.createClass({\n                render() {\n                    return <div>Hello {0}</div>;\n                }\n            });\n\n            const component = GlobalHook.findComponent(TestUtils.renderIntoDocument(<TestComponent />));\n            const theDiv = adapter.getChildren(component)[0];\n            adapter.setOptions({ convertToString: true });\n            expect(adapter.getChildren(theDiv), 'to satisfy', [ 'Hello ', '0' ])\n        });\n\n    });\n});\n"]}