{"version":3,"sources":["../src/ReactElementAdapter.js"],"names":[],"mappings":";;;;;;;;;;;;qBAAkB,OAAO;;;;4BACA,eAAe;;;;6BACd,iBAAiB;;;;AAE3C,IAAM,kBAAkB,GACpB,AAAC,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,OAAI,IAAI,MAAM,OAAI,CAAC,eAAe,CAAC,IAC1E,MAAM,CAAC;;AAEX,SAAS,SAAS,CAAC,KAAK,EAAE;AACtB,QAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AACxB,WAAO,IAAI,KAAK,QAAQ,IACpB,IAAI,KAAK,QAAQ,IACjB,IAAI,KAAK,SAAS,IAClB,IAAI,KAAK,WAAW,IACpB,KAAK,KAAK,IAAI,CAAC;CACtB;;AAED,IAAM,cAAc,GAAG;AACnB,qBAAiB,EAAE,KAAK;CAC3B,CAAC;;AAEF,SAAS,wBAAwB,CAAC,KAAK,EAAE;;AAErC,QAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;;AAC3B,eAAO,KAAK,CAAC;KAChB;;AAED,QAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AACvC,eAAO,EAAE,CAAC;KACb;;AAED,WAAO,EAAE,GAAG,KAAK,CAAC;CACrB;;AAED,SAAS,yBAAyB,CAAC,KAAK,EAAE,KAAK,EAAE;AAC7C,QAAI,SAAS,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,IAChC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EACtC;AACI,aAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,wBAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAC9G,eAAO,KAAK,CAAC;KAChB;AACD,SAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClB,WAAO,KAAK,CAAC;CAChB;;AAED,SAAS,YAAY,CAAC,KAAK,EAAE;AACzB,QAAM,WAAW,GAAG,OAAO,KAAK,CAAC;AACjC,WAAQ,WAAW,KAAK,QAAQ,IAC5B,WAAW,KAAK,QAAQ,IACvB,WAAW,KAAK,UAAU,IAAI,KAAK,CAAC,SAAS,AAAC,IAC9C,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,KAC1C,KAAK,CAAC,eAAe;QACnB,KAAK,CAAC,QAAQ,KAAK,kBAAkB,CAAA,iBAAkB,AAAC,CAC9D;CACL;;AAED,SAAS,OAAO,CAAC,KAAK,EAAE;;AAEpB,QAAI,UAAU,GAAG,gCAAc,KAAK,CAAC,CAAC;;AAEtC,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,UAAU,EAAE;AAClE,YAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,YAAM,aAAa,GAAG,EAAE,CAAC;AACzB,YAAI,IAAI,YAAA,CAAC;;AAET,eAAO,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,EAAE;AACnC,yBAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAClC;AACD,eAAO,aAAa,CAAC;KACxB;;AAED,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;;AAEvB,eAAO,CAAC,KAAK,CAAC,CAAC;KAClB;;AAED,WAAO,KAAK,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,IAAI;eAAK,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAAA,EAAE,EAAE,CAAC,CAAA;CAC1E;;IAEK,mBAAmB;AAEV,aAFT,mBAAmB,CAET,OAAO,EAAE;8BAFnB,mBAAmB;;AAGjB,YAAI,CAAC,QAAQ,GAAG,+BAAa,EAAE,EAAE,cAAc,EAAE,OAAO,CAAC,CAAC;KAC7D;;iBAJC,mBAAmB;;eAMd,iBAAC,OAAO,EAAE;AACb,gBAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,EAAE;AAClC,uBAAO,OAAO,CAAC,IAAI,CAAC;aACvB;;AAED,mBAAO,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,iBAAiB,CAAC;SAC7E;;;eAEY,uBAAC,OAAO,EAAE;;AAEnB,gBAAI,SAAS,GAAG,EAAE,CAAC;AACnB,gBAAI,OAAO,CAAC,KAAK,EAAE;AACf,qBAAK,IAAI,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE;AAC3B,wBAAI,GAAG,KAAK,UAAU,EAAE;AACpB,iCAAS,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBACvC;iBACJ;aACJ;;AAED,gBAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,OAAO,CAAC,GAAG,EAAE;AAC7C,yBAAS,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;aAC/B;;AAED,gBAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,IAAI,OAAO,CAAC,GAAG,EAAE;AAC7C,yBAAS,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;aAC/B;;AAED,mBAAO,SAAS,CAAC;SACpB;;;eAEU,qBAAC,OAAO,EAAE;;AAEjB,gBAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC;AACtC,gBAAI,aAAa,GAAG,EAAE,CAAC;AACvB,gBAAI,UAAU,CAAC;;;;;;;;;AASf,gBAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;AACzB,6BAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,KAAK;2BAAI,YAAY,CAAC,KAAK,CAAC;iBAAA,CAAC,CAAC;aAC1E,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;AAC/B,6BAAa,GAAG,CAAE,QAAQ,CAAE,CAAC;aAChC,MAAM,IAAI,UAAU,GAAG,gCAAc,QAAQ,CAAC,EAAE;AAC7C,oBAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3C,oBAAI,IAAI,YAAA,CAAC;;AAET,uBAAO,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAA,CAAE,IAAI,EAAE;AACnC,iCAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAClC;aACJ;;AAED,gBAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,IAC5B,IAAI,CAAC,QAAQ,CAAC,2BAA2B,IACzC,aAAa,CAAC,MAAM,GAAG,CAAC,AAAC,EAAE;AAC5B,6BAAa,GAAG,aAAa,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AACjD,wBAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;AAC3D,6BAAK,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;qBAC3C;AACD,uBAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChB,2BAAO,GAAG,CAAC;iBACd,EAAE,EAAE,CAAC,CAAC;aACV;;AAED,gBAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE;AACjC,6BAAa,GAAG,aAAa,CAAC,MAAM,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;aACvE;;AAED,mBAAO,aAAa,CAAC;SACxB;;;eAES,oBAAC,UAAU,EAAE;;AAEnB,gBAAI,CAAC,QAAQ,GAAG,+BAAa,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC/D;;;eAES,sBAAG;AACT,mBAAO,IAAI,CAAC,QAAQ,CAAC;SACxB;;;WAxFC,mBAAmB;;;AA4FzB,mBAAmB,CAAC,SAAS,CAAC,kBAAkB,GAAG,WAAW,CAAC;;qBAEhD,mBAAmB","file":"ReactElementAdapter.js","sourcesContent":["import React from 'react';\nimport ObjectAssign from 'object-assign';\nimport getIteratorFn from './getIteratorFn';\n\nconst REACT_ELEMENT_TYPE =\n    (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) ||\n    0xeac7;\n\nfunction isRawType(value) {\n    var type = typeof value;\n    return type === 'string' ||\n        type === 'number' ||\n        type === 'boolean' ||\n        type === 'undefined' ||\n        value === null;\n}\n\nconst DefaultOptions = {\n    concatTextContent: false\n};\n\nfunction convertValueTypeToString(value) {\n\n    if (typeof value === 'string') { // Common case can be fasttracked\n        return value;\n    }\n\n    if (value === null || value === undefined) {\n        return '';\n    }\n\n    return '' + value;\n}\n\nfunction concatenateStringChildren(accum, value) {\n    if (isRawType(value) && accum.length &&\n        isRawType(accum[accum.length - 1]))\n    {\n        accum[accum.length - 1] = convertValueTypeToString(accum[accum.length - 1]) + convertValueTypeToString(value);\n        return accum;\n    }\n    accum.push(value);\n    return accum;\n}\n\nfunction isValidChild(child) {\n    const typeofChild = typeof child;\n    return (typeofChild === 'string' ||\n        typeofChild === 'number' ||\n        (typeofChild === 'function' && child._expectIt) ||\n        (typeof child === 'object' && child !== null &&\n         (child._isReactElement /* React 0.13 */\n         || child.$$typeof === REACT_ELEMENT_TYPE /* React 0.14 */))\n    );\n}\n\nfunction flatten(value) {\n    \n    let iteratorFn = getIteratorFn(value);\n    \n    if (!Array.isArray(value) && typeof value !== 'string' && iteratorFn) {\n        const iterator = iteratorFn.call(value);\n        const childrenArray = [];\n        let step;\n        \n        while (!(step = iterator.next()).done) {\n            childrenArray.push(step.value);\n        }\n        return childrenArray;\n    }\n    \n    if (!Array.isArray(value)) {\n        \n        return [value];\n    }\n\n    return value.reduce((result, item) => result.concat(flatten(item)), [])\n}\n\nclass ReactElementAdapter {\n\n    constructor(options) {\n        this._options = ObjectAssign({}, DefaultOptions, options);\n    }\n\n    getName(element) {\n        if (typeof element.type === 'string') {\n            return element.type;\n        }\n\n        return element.type.displayName || element.type.name || 'no-display-name';\n    }\n\n    getAttributes(element) {\n\n        var realProps = {};\n        if (element.props) {\n            for (var key in element.props) {\n                if (key !== 'children') {\n                    realProps[key] = element.props[key];\n                }\n            }\n        }\n\n        if (this._options.includeKeyProp && element.key) {\n            realProps.key = element.key;\n        }\n\n        if (this._options.includeRefProp && element.ref) {\n            realProps.ref = element.ref;\n        }\n\n        return realProps;\n    }\n\n    getChildren(element) {\n\n        var children = element.props.children;\n        var childrenArray = [];\n        var iteratorFn;\n\n        // This is not using React.Children.forEach / map / toArray because it drops invalid children,\n        // which would be fine, but we want to explicitly include the `expect.it()` function as a valid child\n        // to enable inline assertions\n        // This mirrors the React.Children.forEach logic, as seen at\n        // https://github.com/facebook/react/blob/35962a00084382b49d1f9e3bd36612925f360e5b/src/shared/utils/traverseAllChildren.js\n        // with the exception that we remove the nulls\n        // Basically strings & numbers && elements are allowed (elements classed as objects & functions for simplicity)\n        if (Array.isArray(children)) {\n            childrenArray = flatten(children).filter(child => isValidChild(child));\n        } else if (isValidChild(children)) {\n            childrenArray = [ children ];\n        } else if (iteratorFn = getIteratorFn(children)) {\n            const iterator = iteratorFn.call(children);\n            let step;\n\n            while (!(step = iterator.next()).done) {\n                childrenArray.push(step.value);\n            }\n        }\n\n        if (this._options.convertToString ||\n            (this._options.convertMultipleRawToStrings &&\n             childrenArray.length > 1)) {\n            childrenArray = childrenArray.reduce((agg, child) => {\n                if (child !== null && child !== undefined && isRawType(child)) {\n                    child = convertValueTypeToString(child);\n                }\n                agg.push(child);\n                return agg;\n            }, []);\n        }\n\n        if (this._options.concatTextContent) {\n            childrenArray = childrenArray.reduce(concatenateStringChildren, []);\n        }\n\n        return childrenArray;\n    }\n\n    setOptions(newOptions) {\n\n        this._options = ObjectAssign({}, this._options, newOptions);\n    }\n\n    getOptions() {\n        return this._options;\n    }\n}\n\n\nReactElementAdapter.prototype.classAttributeName = 'className';\n\nexport default ReactElementAdapter;\n"]}