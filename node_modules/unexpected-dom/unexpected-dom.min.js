(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}(g.unexpected||(g.unexpected={})).dom=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){var matchesSelector=require("./matchesSelector");function parseHtml(str,isFragment,assertionNameForErrorMessage){if(isFragment){str="<html><head></head><body>"+str+"</body></html>"}var htmlDocument;if(typeof DOMParser!=="undefined"){htmlDocument=(new DOMParser).parseFromString(str,"text/html")}else if(typeof document!=="undefined"&&document.implementation&&document.implementation.createHTMLDocument){htmlDocument=document.implementation.createHTMLDocument("");htmlDocument.open();htmlDocument.write(str);htmlDocument.close()}else{var jsdom;try{jsdom=require(""+"jsdom")}catch(err){throw new Error("unexpected-dom"+(assertionNameForErrorMessage?" ("+assertionNameForErrorMessage+")":"")+": Running outside a browser, but could not find the `jsdom` module. Please npm install jsdom to make this work.")}htmlDocument=jsdom.jsdom(str)}if(isFragment){var body=htmlDocument.body;var documentFragment=htmlDocument.createDocumentFragment();if(body){for(var i=0;i<body.childNodes.length;i+=1){documentFragment.appendChild(body.childNodes[i].cloneNode(true))}}return documentFragment}else{return htmlDocument}}function parseXml(str,assertionNameForErrorMessage){if(typeof DOMParser!=="undefined"){return(new DOMParser).parseFromString(str,"text/xml")}else{var jsdom;try{jsdom=require(""+"jsdom")}catch(err){throw new Error("unexpected-dom"+(assertionNameForErrorMessage?" ("+assertionNameForErrorMessage+")":"")+": Running outside a browser (or in a browser without DOMParser), but could not find the `jsdom` module. Please npm install jsdom to make this work.")}return jsdom.jsdom(str,{parsingMode:"xml"})}}var enumeratedAttributeValues={draggable:["true","false"]};function isBooleanAttribute(attrName,attrValue){var isSimpleBoolean=/^(?:allowfullscreen|async|autofocus|autoplay|checked|compact|controls|declare|default|defaultchecked|defaultmuted|defaultselected|defer|disabled|enabled|formnovalidate|hidden|indeterminate|inert|ismap|itemscope|loop|multiple|muted|nohref|noresize|noshade|novalidate|nowrap|open|pauseonexit|readonly|required|reversed|scoped|seamless|selected|sortable|spellcheck|truespeed|typemustmatch|visible)$/i.test(attrName);if(isSimpleBoolean){return true}var attrValueEnumeration=enumeratedAttributeValues[attrName.toLowerCase()];if(!attrValueEnumeration){return false}else{return-1===attrValueEnumeration.indexOf(attrValue.toLowerCase())}}function styleStringToObject(str){var styles={};str.split(";").forEach(function(rule){var tuple=rule.split(":").map(function(part){return part.trim()});if(tuple[0]&&tuple[1]){styles[tuple[0]]=tuple[1]}});return styles}function getClassNamesFromAttributeValue(attributeValue){if(attributeValue===null){return""}var classNames=attributeValue.split(/\s+/);if(classNames.length===1&&classNames[0]===""){classNames.pop()}return classNames}function isInsideHtmlDocument(node){var ownerDocument;if(node.nodeType===9&&node.documentElement&&node.implementation){ownerDocument=node}else{ownerDocument=node.ownerDocument}if(ownerDocument.contentType){return ownerDocument.contentType==="text/html"}else{return ownerDocument.toString()==="[object HTMLDocument]"}}function getAttributes(element){var isHtml=isInsideHtmlDocument(element);var attrs=element.attributes;var result={};for(var i=0;i<attrs.length;i+=1){if(attrs[i].name==="class"){result[attrs[i].name]=attrs[i].value&&attrs[i].value.split(" ")||[]}else if(attrs[i].name==="style"){result[attrs[i].name]=styleStringToObject(attrs[i].value)}else{result[attrs[i].name]=isHtml&&isBooleanAttribute(attrs[i].name)?true:attrs[i].value||""}}return result}function getCanonicalAttributes(element){var attrs=getAttributes(element);var result={};Object.keys(attrs).sort().forEach(function(key){result[key]=attrs[key]});return result}function entitify(value){return String(value).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;")}function isVoidElement(elementName){return/(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)/i.test(elementName)}function writeAttributeToMagicPen(output,attributeName,value,isHtml){output.prismAttrName(attributeName);if(!isHtml||!isBooleanAttribute(attributeName)){if(attributeName==="class"){value=value.join(" ")}else if(attributeName==="style"){value=Object.keys(value).map(function(cssProp){return cssProp+": "+value[cssProp]}).join("; ")}output.prismPunctuation('="').prismAttrValue(entitify(value)).prismPunctuation('"')}}function stringifyAttribute(attributeName,value){if(isBooleanAttribute(attributeName)){return attributeName}else if(attributeName==="class"){return'class="'+value.join(" ")+'"'}else if(attributeName==="style"){return'style="'+Object.keys(value).map(function(cssProp){return[cssProp,value[cssProp]].join(": ")}).join("; ")+'"'}else{return attributeName+'="'+entitify(value)+'"'}}function stringifyStartTag(element){var elementName=element.ownerDocument.contentType==="text/html"?element.nodeName.toLowerCase():element.nodeName;var str="<"+elementName;var attrs=getCanonicalAttributes(element);Object.keys(attrs).forEach(function(key){str+=" "+stringifyAttribute(key,attrs[key])});str+=">";return str}function stringifyEndTag(element){var isHtml=isInsideHtmlDocument(element);var elementName=isHtml?element.nodeName.toLowerCase():element.nodeName;if(isHtml&&isVoidElement(elementName)&&element.childNodes.length===0){return""}else{return"</"+elementName+">"}}module.exports={name:"unexpected-dom",installInto:function(expect){expect.installPlugin(require("magicpen-prism"));var topLevelExpect=expect;expect.addType({name:"DOMNode",base:"object",identify:function(obj){return obj&&obj.nodeName&&[2,3,4,5,6,7,10,11,12].indexOf(obj.nodeType)>-1},equal:function(a,b){return a.nodeValue===b.nodeValue},inspect:function(element,depth,output){return output.code(element.nodeName+' "'+element.nodeValue+'"',"prism-string")}});expect.addType({name:"DOMComment",base:"DOMNode",identify:function(obj){return obj&&typeof obj.nodeType==="number"&&obj.nodeType===8},equal:function(a,b){return a.nodeValue===b.nodeValue},inspect:function(element,depth,output){return output.code("<!--"+element.nodeValue+"-->","html")},diff:function(actual,expected,output,diff,inspect,equal){var d=diff("<!--"+actual.nodeValue+"-->","<!--"+expected.nodeValue+"-->");d.inline=true;return d}});expect.addType({name:"DOMTextNode",base:"DOMNode",identify:function(obj){return obj&&typeof obj.nodeType==="number"&&obj.nodeType===3},equal:function(a,b){return a.nodeValue===b.nodeValue},inspect:function(element,depth,output){return output.code(entitify(element.nodeValue.trim()),"html")},diff:function(actual,expected,output,diff,inspect,equal){var d=diff(actual.nodeValue,expected.nodeValue);d.inline=true;return d}});expect.addType({name:"DOMNodeList",base:"array-like",prefix:function(output){return output.text("NodeList[")},suffix:function(output){return output.text("]")},similar:function(a,b){return a.nodeType===1&&b.nodeType===1&&a.nodeName===b.nodeName},identify:function(obj){return obj&&typeof obj.length==="number"&&typeof obj.toString==="function"&&typeof obj.item==="function"&&(obj.toString().indexOf("NodeList")!==-1||obj.constructor&&obj.constructor.name==="NodeList")}});expect.addType({name:"attachedDOMNodeList",base:"DOMNodeList",indent:false,prefix:function(output){return output},suffix:function(output){return output},delimiter:function(output){return output},identify:function(obj){return obj&&obj._isAttachedDOMNodeList}});function makeAttachedDOMNodeList(domNodeList,contentType){var attachedDOMNodeList=[];for(var i=0;i<domNodeList.length;i+=1){attachedDOMNodeList.push(domNodeList[i])}attachedDOMNodeList._isAttachedDOMNodeList=true;attachedDOMNodeList.ownerDocument={contentType:contentType};return attachedDOMNodeList}expect.addType({name:"HTMLDocType",base:"DOMNode",identify:function(obj){return obj&&typeof obj.nodeType==="number"&&obj.nodeType===10&&"publicId"in obj},inspect:function(doctype,depth,output,inspect){output.code("<!DOCTYPE "+doctype.name+">","html")},equal:function(a,b){return a.toString()===b.toString()},diff:function(actual,expected,output,diff){var d=diff("<!DOCTYPE "+actual.name+">","<!DOCTYPE "+expected.name+">");d.inline=true;return d}});expect.addType({name:"DOMDocument",base:"DOMNode",identify:function(obj){return obj&&typeof obj.nodeType==="number"&&obj.nodeType===9&&obj.documentElement&&obj.implementation},inspect:function(document,depth,output,inspect){for(var i=0;i<document.childNodes.length;i+=1){output.append(inspect(document.childNodes[i]))}},diff:function(actual,expected,output,diff,inspect,equal){var result={inline:true,diff:output};result.diff.append(diff(makeAttachedDOMNodeList(actual.childNodes),makeAttachedDOMNodeList(expected.childNodes)).diff);return result}});expect.addType({name:"HTMLDocument",base:"DOMDocument",identify:function(obj){return this.baseType.identify(obj)&&obj.contentType==="text/html"}});expect.addType({name:"XMLDocument",base:"DOMDocument",identify:function(obj){return this.baseType.identify(obj)&&/^(?:application|text)\/xml|\+xml\b/.test(obj.contentType)},inspect:function(document,depth,output,inspect){output.code('<?xml version="1.0"?>',"xml");for(var i=0;i<document.childNodes.length;i+=1){output.append(inspect(document.childNodes[i],depth-1))}}});expect.addType({name:"DOMDocumentFragment",base:"DOMNode",identify:function(obj){return obj&&obj.nodeType===11},inspect:function(documentFragment,depth,output,inspect){output.text("DocumentFragment[").append(inspect(documentFragment.childNodes,depth)).text("]")},diff:function(actual,expected,output,diff,inspect,equal){var result={inline:true,diff:output};result.diff.block(diff(makeAttachedDOMNodeList(actual.childNodes),makeAttachedDOMNodeList(expected.childNodes)).diff);return result}});expect.addType({name:"DOMElement",base:"DOMNode",identify:function(obj){return obj&&typeof obj.nodeType==="number"&&obj.nodeType===1&&obj.nodeName&&obj.attributes},equal:function(a,b,equal){var aIsHtml=isInsideHtmlDocument(a);var bIsHtml=isInsideHtmlDocument(b);return aIsHtml===bIsHtml&&(aIsHtml?a.nodeName.toLowerCase()===b.nodeName.toLowerCase():a.nodeName===b.nodeName)&&equal(getAttributes(a),getAttributes(b))&&equal(a.childNodes,b.childNodes)},inspect:function(element,depth,output,inspect){var elementName=element.nodeName.toLowerCase();var startTag=stringifyStartTag(element);output.code(startTag,"html");if(element.childNodes.length>0){if(depth===1){output.text("...")}else{var inspectedChildren=[];if(elementName==="script"){var type=element.getAttribute("type");if(!type||/javascript/.test(type)){type="javascript"}inspectedChildren.push(output.clone().code(element.textContent,type))}else if(elementName==="style"){inspectedChildren.push(output.clone().code(element.textContent,element.getAttribute("type")||"text/css"))}else{for(var i=0;i<element.childNodes.length;i+=1){inspectedChildren.push(inspect(element.childNodes[i]))}}var width=0;var multipleLines=inspectedChildren.some(function(o){var size=o.size();width+=size.width;return width>50||o.height>1});if(multipleLines){output.nl().indentLines();inspectedChildren.forEach(function(inspectedChild,index){output.i().block(inspectedChild).nl()});output.outdentLines()}else{inspectedChildren.forEach(function(inspectedChild,index){output.append(inspectedChild)})}}}output.code(stringifyEndTag(element),"html");return output},diffLimit:512,diff:function(actual,expected,output,diff,inspect,equal){var isHtml=isInsideHtmlDocument(actual);var result={diff:output,inline:true};if(Math.max(actual.length,expected.length)>this.diffLimit){result.diff.jsComment("Diff suppressed due to size > "+this.diffLimit);return result}var emptyElements=actual.childNodes.length===0&&expected.childNodes.length===0;var conflictingElement=actual.nodeName.toLowerCase()!==expected.nodeName.toLowerCase()||!equal(getAttributes(actual),getAttributes(expected));if(conflictingElement){var canContinueLine=true;output.prismPunctuation("<").prismTag(actual.nodeName.toLowerCase());if(actual.nodeName.toLowerCase()!==expected.nodeName.toLowerCase()){output.sp().annotationBlock(function(){this.error("should be").sp().prismTag(expected.nodeName.toLowerCase())}).nl();canContinueLine=false}var actualAttributes=getAttributes(actual);var expectedAttributes=getAttributes(expected);Object.keys(actualAttributes).forEach(function(attributeName){output.sp(canContinueLine?1:2+actual.nodeName.length);writeAttributeToMagicPen(output,attributeName,actualAttributes[attributeName],isHtml);if(attributeName in expectedAttributes){if(actualAttributes[attributeName]===expectedAttributes[attributeName]){canContinueLine=true}else{output.sp().annotationBlock(function(){this.error("should equal").sp().append(inspect(entitify(expectedAttributes[attributeName])))}).nl();canContinueLine=false}delete expectedAttributes[attributeName]}else{output.sp().annotationBlock(function(){this.error("should be removed")}).nl();canContinueLine=false}});Object.keys(expectedAttributes).forEach(function(attributeName){output.sp(canContinueLine?1:2+actual.nodeName.length);output.annotationBlock(function(){this.error("missing").sp();writeAttributeToMagicPen(this,attributeName,expectedAttributes[attributeName],isHtml)}).nl();canContinueLine=false});output.prismPunctuation(">")}else{output.code(stringifyStartTag(actual),"html")}if(!emptyElements){output.nl().indentLines().i().block(diff(makeAttachedDOMNodeList(actual.childNodes),makeAttachedDOMNodeList(expected.childNodes)).diff).nl().outdentLines()}output.code(stringifyEndTag(actual),"html");return result}});expect.addAssertion("<DOMElement> to have (class|classes) <array|string>",function(expect,subject,value){return expect(subject,"to have attributes",{"class":value})});expect.addAssertion("<DOMElement> to only have (class|classes) <array|string>",function(expect,subject,value){return expect(subject,"to have attributes",{"class":function(className){var actualClasses=getClassNamesFromAttributeValue(className);if(typeof value==="string"){value=getClassNamesFromAttributeValue(value)}return topLevelExpect(actualClasses.sort(),"to equal",value.sort())}})});expect.addAssertion("<DOMTextNode> to [exhaustively] satisfy <DOMTextNode>",function(expect,subject,value){return expect(subject.nodeValue,"to equal",value.nodeValue)});expect.addAssertion("<DOMTextNode> to [exhaustively] satisfy <object>",function(expect,subject,value){expect.fail()});expect.addAssertion("<DOMTextNode> to [exhaustively] satisfy <regexp>",function(expect,subject,value){return expect(subject.nodeValue,"to satisfy",value)});expect.addAssertion("<DOMTextNode> to [exhaustively] satisfy <any>",function(expect,subject,value){return expect(subject.nodeValue,"to satisfy",value)});function convertDOMNodeToSatisfySpec(node,isHtml){if(node.nodeType===1||node.nodeType===10){var result={name:isHtml?node.nodeName.toLowerCase():node.nodeName};if(node.attributes){result.attributes={};for(var i=0;i<node.attributes.length;i+=1){result.attributes[node.attributes[i].name]=isHtml&&isBooleanAttribute(node.attributes[i].name)?true:node.attributes[i].value||""}}result.children=Array.prototype.map.call(node.childNodes,function(childNode){return convertDOMNodeToSatisfySpec(childNode,isHtml)});return result}else if(node.nodeType===3){return node.nodeValue}else{throw new Error("to satisfy: Node type "+node.nodeType+" is not yet supported in the value")}}expect.addAssertion("<DOMNodeList> to [exhaustively] satisfy <string>",function(expect,subject,value){var isHtml=subject.ownerDocument.contentType==="text/html";expect.argsOutput=function(output){output.code(value,isHtml?"html":"xml")};return expect(subject,"to [exhaustively] satisfy",(isHtml?parseHtml(value,true,expect.testDescription):parseXml(value,expect.testDescription)).childNodes)});expect.addAssertion("<DOMNodeList> to [exhaustively] satisfy <DOMNodeList>",function(expect,subject,value){var isHtml=subject.ownerDocument.contentType==="text/html";var satisfySpecs=[];for(var i=0;i<value.length;i+=1){satisfySpecs.push(convertDOMNodeToSatisfySpec(value[i],isHtml))}return expect(subject,"to [exhaustively] satisfy",satisfySpecs)});expect.addAssertion("<DOMDocumentFragment> to [exhaustively] satisfy <string>",function(expect,subject,value){var isHtml=isInsideHtmlDocument(subject);expect.argsOutput=function(output){output.code(value,isHtml?"html":"xml")};return expect(subject,"to [exhaustively] satisfy",isHtml?parseHtml(value,true,expect.testDescription):parseXml(value,expect.testDescription))});expect.addAssertion("<DOMDocumentFragment> to [exhaustively] satisfy <DOMDocumentFragment>",function(expect,subject,value){var isHtml=subject.ownerDocument.contentType==="text/html";return expect(subject,"to [exhaustively] satisfy",Array.prototype.map.call(value.childNodes,function(childNode){return convertDOMNodeToSatisfySpec(childNode,isHtml)}))});expect.addAssertion("<DOMDocumentFragment> to [exhaustively] satisfy <object|array>",function(expect,subject,value){return expect(subject.childNodes,"to [exhaustively] satisfy",value)});expect.addAssertion("<DOMElement> to [exhaustively] satisfy <string>",function(expect,subject,value){var isHtml=isInsideHtmlDocument(subject);var documentFragment=isHtml?parseHtml(value,true,this.testDescription):parseXml(value,this.testDescription);if(documentFragment.childNodes.length!==1){throw new Error("HTMLElement to satisfy string: Only a single node is supported")}expect.argsOutput=function(output){output.code(value,isHtml?"html":"xml")};return expect(subject,"to [exhaustively] satisfy",documentFragment.childNodes[0])});expect.addAssertion("<DOMDocument> to [exhaustively] satisfy <string>",function(expect,subject,value){var isHtml=isInsideHtmlDocument(subject);var valueDocument=isHtml?parseHtml(value,false,this.testDescription):parseXml(value,this.testDescription);return expect(makeAttachedDOMNodeList(subject.childNodes),"to [exhaustively] satisfy",Array.prototype.map.call(valueDocument.childNodes,function(childNode){return convertDOMNodeToSatisfySpec(childNode,isHtml)}))});expect.addAssertion("<DOMDocument> to [exhaustively] satisfy <DOMDocument>",function(expect,subject,value){var isHtml=isInsideHtmlDocument(subject);return expect(makeAttachedDOMNodeList(subject.childNodes),"to [exhaustively] satisfy",Array.prototype.map.call(value.childNodes,function(childNode){return convertDOMNodeToSatisfySpec(childNode,isHtml)}))});expect.addAssertion("<DOMElement> to [exhaustively] satisfy <DOMElement>",function(expect,subject,value){return expect(subject,"to [exhaustively] satisfy",convertDOMNodeToSatisfySpec(value,isInsideHtmlDocument(subject)))});expect.addAssertion("<DOMElement> to [exhaustively] satisfy <DOMTextNode>",function(expect,subject,value){expect.fail()});expect.addAssertion("<DOMTextNode> to [exhaustively] satisfy <DOMElement>",function(expect,subject,value){expect.fail()});expect.addAssertion("<DOMElement> to [exhaustively] satisfy <object>",function(expect,subject,value){var isHtml=isInsideHtmlDocument(subject);var unsupportedOptions=Object.keys(value).filter(function(key){return key!=="attributes"&&key!=="name"&&key!=="children"&&key!=="onlyAttributes"&&key!=="textContent"});if(unsupportedOptions.length>0){throw new Error("Unsupported option"+(unsupportedOptions.length===1?"":"s")+": "+unsupportedOptions.join(", "))}var promiseByKey={name:expect.promise(function(){if(value&&typeof value.name!=="undefined"){return topLevelExpect(isHtml?subject.nodeName.toLowerCase():subject.nodeName,"to satisfy",value.name)}}),children:expect.promise(function(){if(typeof value.children!=="undefined"){if(typeof value.textContent!=="undefined"){throw new Error("The children and textContent properties are not supported together")}return topLevelExpect(makeAttachedDOMNodeList(subject.childNodes,subject.ownerDocument.contentType),"to satisfy",value.children)}else if(typeof value.textContent!=="undefined"){return topLevelExpect(subject.textContent,"to satisfy",value.textContent)}}),attributes:{}};var onlyAttributes=value&&value.onlyAttributes||expect.flags.exhaustively;var attrs=getAttributes(subject);var expectedAttributes=value&&value.attributes;var expectedAttributeNames=[];if(typeof expectedAttributes!=="undefined"){if(typeof expectedAttributes==="string"){expectedAttributes=[expectedAttributes]}var expectedValueByAttributeName={};if(Array.isArray(expectedAttributes)){expectedAttributes.forEach(function(attributeName){expectedValueByAttributeName[attributeName]=true})}else if(expectedAttributes&&typeof expectedAttributes==="object"){expectedValueByAttributeName=expectedAttributes}Object.keys(expectedValueByAttributeName).forEach(function(attributeName){expectedAttributeNames.push(attributeName)});expectedAttributeNames.forEach(function(attributeName){var attributeValue=subject.getAttribute(attributeName);var expectedAttributeValue=expectedValueByAttributeName[attributeName];promiseByKey.attributes[attributeName]=expect.promise(function(){if(attributeName==="class"&&(typeof expectedAttributeValue==="string"||Array.isArray(expectedAttributeValue))){var actualClasses=getClassNamesFromAttributeValue(attributeValue);var expectedClasses=expectedAttributeValue;if(typeof expectedClasses==="string"){expectedClasses=getClassNamesFromAttributeValue(expectedAttributeValue)}if(onlyAttributes){return topLevelExpect(actualClasses.sort(),"to equal",expectedClasses.sort())}else{return topLevelExpect.apply(topLevelExpect,[actualClasses,"to contain"].concat(expectedClasses))}}else if(attributeName==="style"){var expectedStyleObj;if(typeof expectedValueByAttributeName.style==="string"){expectedStyleObj=styleStringToObject(expectedValueByAttributeName.style)}else{expectedStyleObj=expectedValueByAttributeName.style}if(onlyAttributes){return topLevelExpect(attrs.style,"to exhaustively satisfy",expectedStyleObj)}else{return topLevelExpect(attrs.style,"to satisfy",expectedStyleObj)}}else if(expectedAttributeValue===true){topLevelExpect(subject.hasAttribute(attributeName),"to be true")}else if(typeof expectedAttributeValue==="undefined"){topLevelExpect(subject.hasAttribute(attributeName),"to be false")}else{return topLevelExpect(attributeValue,"to satisfy",expectedAttributeValue)}})});promiseByKey.attributePresence=expect.promise(function(){var attributeNamesExpectedToBeDefined=[];expectedAttributeNames.forEach(function(attributeName){if(typeof expectedValueByAttributeName[attributeName]==="undefined"){expect(attrs,"not to have key",attributeName)}else{attributeNamesExpectedToBeDefined.push(attributeName);expect(attrs,"to have key",attributeName)}});if(onlyAttributes){expect(Object.keys(attrs).sort(),"to equal",attributeNamesExpectedToBeDefined.sort())}})}return expect.promise.all(promiseByKey).caught(function(){return expect.promise.settle(promiseByKey).then(function(){expect.fail({diff:function(output,diff,inspect,equal){output.block(function(){var output=this;output.prismPunctuation("<").prismTag(isHtml?subject.nodeName.toLowerCase():subject.nodeName);var canContinueLine=true;if(promiseByKey.name.isRejected()){var nameError=promiseByKey.name.reason();output.sp().annotationBlock(function(){this.error(nameError&&nameError.getLabel()||"should satisfy").sp().append(inspect(value.name))}).nl();canContinueLine=false}Object.keys(attrs).forEach(function(attributeName){var promise=promiseByKey.attributes[attributeName];output.sp(canContinueLine?1:2+subject.nodeName.length);writeAttributeToMagicPen(output,attributeName,attrs[attributeName],isHtml);if(promise&&promise.isFulfilled()||!promise&&(!onlyAttributes||expectedAttributeNames.indexOf(attributeName)!==-1)){canContinueLine=true}else{output.sp().annotationBlock(function(){if(promise&&typeof expectedValueByAttributeName[attributeName]!=="undefined"){this.append(promise.reason().getErrorMessage(this))}else{this.error("should be removed")}}).nl();canContinueLine=false}});expectedAttributeNames.forEach(function(attributeName){if(!subject.hasAttribute(attributeName)){var promise=promiseByKey.attributes[attributeName];if(!promise||promise.isRejected()){var err=promise&&promise.reason();output.nl().sp(2+subject.nodeName.length).annotationBlock(function(){this.error("missing").sp().prismAttrName(attributeName,"html");if(expectedValueByAttributeName[attributeName]!==true){this.sp().error(err&&err.getLabel()||"should satisfy").sp().append(inspect(expectedValueByAttributeName[attributeName]))}}).nl()}canContinueLine=false}});output.prismPunctuation(">");var childrenError=promiseByKey.children.isRejected()&&promiseByKey.children.reason();if(childrenError){var childrenDiff=childrenError.getDiff(output);if(childrenDiff&&childrenDiff.inline){this.nl().indentLines().i().block(childrenDiff.diff).nl().outdentLines()}else{output.nl().indentLines().i().block(function(){for(var i=0;i<subject.childNodes.length;i+=1){this.append(inspect(subject.childNodes[i])).nl()}});output.sp().annotationBlock(function(){this.append(childrenError.getErrorMessage(this))});output.nl()}}else{for(var i=0;i<subject.childNodes.length;i+=1){this.append(inspect(subject.childNodes[i]))}}output.code(stringifyEndTag(subject),"html")});return{inline:true,diff:output}}})})})});expect.addAssertion("<DOMElement> to [only] have (attribute|attributes) <string+>",function(expect,subject,value){return expect(subject,"to [only] have attributes",Array.prototype.slice.call(arguments,2))});expect.addAssertion("<DOMElement> to [only] have (attribute|attributes) <array|object>",function(expect,subject,value){return expect(subject,"to satisfy",{attributes:value,onlyAttributes:expect.flags.only})});expect.addAssertion("<DOMElement> to have no (child|children)",function(expect,subject){expect.errorMode="nested";return expect(Array.prototype.slice.call(subject.childNodes),"to be an empty array")});expect.addAssertion("<DOMElement> to have (child|children)",function(expect,subject){return expect(subject.childNodes,"not to be empty")});expect.addAssertion("<DOMElement> to have (child|children) <string>",function(expect,subject,query){expect.errorMode="nested";expect(subject.querySelectorAll(query),"not to be empty")});expect.addAssertion("<DOMElement> to have text <any>",function(expect,subject,value){return expect(subject.textContent,"to satisfy",value)});expect.addAssertion("<DOMDocument|DOMElement|DOMDocumentFragment> [when] queried for [first] <string> <assertion?>",function(expect,subject,query){var queryResult;expect.argsOutput[0]=function(output){return output.green(query)};expect.errorMode="nested";if(expect.flags.first){queryResult=subject.querySelector(query);if(!queryResult){expect.fail(function(output){output.error("The selector").sp().jsString(query).sp().error("yielded no results")})}}else{queryResult=subject.querySelectorAll(query);if(queryResult.length===0){expect.fail(function(output){output.error("The selector").sp().jsString(query).sp().error("yielded no results")})}}return expect.shift(queryResult)});expect.addAssertion("<DOMDocument|DOMElement|DOMDocumentFragment> to contain [no] elements matching <string>",function(expect,subject,query){if(expect.flags.no){return expect(subject.querySelectorAll(query),"to satisfy",[])}return expect(subject.querySelectorAll(query),"not to satisfy",[])});expect.addAssertion("<DOMDocument|DOMElement|DOMDocumentFragment> [not] to match <string>",function(expect,subject,query){return expect(matchesSelector(subject,query),"to be",expect.flags.not?false:true)});expect.addAssertion("<string> [when] parsed as (html|HTML) [fragment] <assertion?>",function(expect,subject){expect.errorMode="nested";return expect.shift(parseHtml(subject,expect.flags.fragment,expect.testDescription))});expect.addAssertion("<string> [when] parsed as (xml|XML) <assertion?>",function(expect,subject){expect.errorMode="nested";return expect.shift(parseXml(subject,expect.testDescription))})}}},{"./matchesSelector":2,"magicpen-prism":4}],2:[function(require,module,exports){module.exports=function(elm,selector){var matchFuntion=elm.matchesSelector||elm.mozMatchesSelector||elm.msMatchesSelector||elm.oMatchesSelector||elm.webkitMatchesSelector||function(selector){var node=this;var nodes=(node.parentNode||node.document).querySelectorAll(selector);var i=0;while(nodes[i]&&nodes[i]!==node){i+=1}return!!nodes[i]};return matchFuntion.call(elm,selector)}},{}],3:[function(require,module,exports){var self=typeof window!=="undefined"?window:{};var Prism=function(){var lang=/\blang(?:uage)?-(?!\*)(\w+)\b/i;var _=self.Prism={util:{type:function(o){return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1]},clone:function(o){var type=_.util.type(o);switch(type){case"Object":var clone={};for(var key in o){if(o.hasOwnProperty(key)){clone[key]=_.util.clone(o[key])}}return clone;case"Array":return o.slice()}return o}},languages:{extend:function(id,redef){var lang=_.util.clone(_.languages[id]);for(var key in redef){lang[key]=redef[key]}return lang},insertBefore:function(inside,before,insert,root){root=root||_.languages;var grammar=root[inside];var ret={};for(var token in grammar){if(grammar.hasOwnProperty(token)){if(token==before){for(var newToken in insert){if(insert.hasOwnProperty(newToken)){ret[newToken]=insert[newToken]}}}ret[token]=grammar[token]}}return root[inside]=ret},DFS:function(o,callback){for(var i in o){callback.call(o,i,o[i]);if(_.util.type(o)==="Object"){_.languages.DFS(o[i],callback)}}}},highlightAll:function(async,callback){var elements=document.querySelectorAll('code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code');for(var i=0,element;element=elements[i++];){_.highlightElement(element,async===true,callback)}},highlightElement:function(element,async,callback){var language,grammar,parent=element;while(parent&&!lang.test(parent.className)){parent=parent.parentNode}if(parent){language=(parent.className.match(lang)||[,""])[1];grammar=_.languages[language]}if(!grammar){return}element.className=element.className.replace(lang,"").replace(/\s+/g," ")+" language-"+language;parent=element.parentNode;if(/pre/i.test(parent.nodeName)){parent.className=parent.className.replace(lang,"").replace(/\s+/g," ")+" language-"+language}var code=element.textContent;if(!code){return}code=code.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ");var env={element:element,language:language,grammar:grammar,code:code};_.hooks.run("before-highlight",env);if(async&&self.Worker){var worker=new Worker(_.filename);worker.onmessage=function(evt){env.highlightedCode=Token.stringify(JSON.parse(evt.data),language);_.hooks.run("before-insert",env);env.element.innerHTML=env.highlightedCode;callback&&callback.call(env.element);_.hooks.run("after-highlight",env)};worker.postMessage(JSON.stringify({language:env.language,code:env.code}))}else{env.highlightedCode=_.highlight(env.code,env.grammar,env.language);_.hooks.run("before-insert",env);env.element.innerHTML=env.highlightedCode;callback&&callback.call(element);_.hooks.run("after-highlight",env)}},highlight:function(text,grammar,language){return Token.stringify(_.tokenize(text,grammar),language)},tokenize:function(text,grammar,language){var Token=_.Token;var strarr=[text];var rest=grammar.rest;if(rest){for(var token in rest){grammar[token]=rest[token];

}delete grammar.rest}tokenloop:for(var token in grammar){if(!grammar.hasOwnProperty(token)||!grammar[token]){continue}var pattern=grammar[token],inside=pattern.inside,lookbehind=!!pattern.lookbehind,lookbehindLength=0;pattern=pattern.pattern||pattern;for(var i=0;i<strarr.length;i++){var str=strarr[i];if(strarr.length>text.length){break tokenloop}if(str instanceof Token){continue}pattern.lastIndex=0;var match=pattern.exec(str);if(match){if(lookbehind){lookbehindLength=match[1].length}var from=match.index-1+lookbehindLength,match=match[0].slice(lookbehindLength),len=match.length,to=from+len,before=str.slice(0,from+1),after=str.slice(to+1);var args=[i,1];if(before){args.push(before)}var wrapped=new Token(token,inside?_.tokenize(match,inside):match);args.push(wrapped);if(after){args.push(after)}Array.prototype.splice.apply(strarr,args)}}}return strarr},hooks:{all:{},add:function(name,callback){var hooks=_.hooks.all;hooks[name]=hooks[name]||[];hooks[name].push(callback)},run:function(name,env){var callbacks=_.hooks.all[name];if(!callbacks||!callbacks.length){return}for(var i=0,callback;callback=callbacks[i++];){callback(env)}}}};var Token=_.Token=function(type,content){this.type=type;this.content=content};Token.stringify=function(o,language,parent){if(typeof o=="string"){return o}if(Object.prototype.toString.call(o)=="[object Array]"){return o.map(function(element){return Token.stringify(element,language,o)}).join("")}var env={type:o.type,content:Token.stringify(o.content,language,parent),tag:"span",classes:["token",o.type],attributes:{},language:language,parent:parent};if(env.type=="comment"){env.attributes["spellcheck"]="true"}_.hooks.run("wrap",env);var attributes="";for(var name in env.attributes){attributes+=name+'="'+(env.attributes[name]||"")+'"'}return"<"+env.tag+' class="'+env.classes.join(" ")+'" '+attributes+">"+env.content+"</"+env.tag+">"};if(!self.document){if(!self.addEventListener){return self.Prism}self.addEventListener("message",function(evt){var message=JSON.parse(evt.data),lang=message.language,code=message.code;self.postMessage(JSON.stringify(_.tokenize(code,_.languages[lang])));self.close()},false);return self.Prism}var script=document.getElementsByTagName("script");script=script[script.length-1];if(script){_.filename=script.src;if(document.addEventListener&&!script.hasAttribute("data-manual")){document.addEventListener("DOMContentLoaded",_.highlightAll)}}return self.Prism}();if(typeof module!=="undefined"&&module.exports){module.exports=Prism}Prism.languages.markup={comment:/&lt;!--[\w\W]*?-->/g,prolog:/&lt;\?.+?\?>/,doctype:/&lt;!DOCTYPE.+?>/,cdata:/&lt;!\[CDATA\[[\w\W]*?]]>/i,tag:{pattern:/&lt;\/?[\w:-]+\s*(?:\s+[\w:-]+(?:=(?:("|')(\\?[\w\W])*?\1|[^\s'">=]+))?\s*)*\/?>/gi,inside:{tag:{pattern:/^&lt;\/?[\w:-]+/i,inside:{punctuation:/^&lt;\/?/,namespace:/^[\w-]+?:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/gi,inside:{punctuation:/=|>|"/g}},punctuation:/\/?>/g,"attr-name":{pattern:/[\w:-]+/g,inside:{namespace:/^[\w-]+?:/}}}},entity:/&amp;#?[\da-z]{1,8};/gi};Prism.hooks.add("wrap",function(env){if(env.type==="entity"){env.attributes["title"]=env.content.replace(/&amp;/,"&")}});Prism.languages.css={comment:/\/\*[\w\W]*?\*\//g,atrule:{pattern:/@[\w-]+?.*?(;|(?=\s*{))/gi,inside:{punctuation:/[;:]/g}},url:/url\((["']?).*?\1\)/gi,selector:/[^\{\}\s][^\{\};]*(?=\s*\{)/g,property:/(\b|\B)[\w-]+(?=\s*:)/gi,string:/("|')(\\?.)*?\1/g,important:/\B!important\b/gi,ignore:/&(lt|gt|amp);/gi,punctuation:/[\{\};:]/g};if(Prism.languages.markup){Prism.languages.insertBefore("markup","tag",{style:{pattern:/(&lt;|<)style[\w\W]*?(>|&gt;)[\w\W]*?(&lt;|<)\/style(>|&gt;)/gi,inside:{tag:{pattern:/(&lt;|<)style[\w\W]*?(>|&gt;)|(&lt;|<)\/style(>|&gt;)/gi,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.css}}})}Prism.languages.clike={comment:{pattern:/(^|[^\\])(\/\*[\w\W]*?\*\/|(^|[^:])\/\/.*?(\r?\n|$))/g,lookbehind:true},string:/("|')(\\?.)*?\1/g,"class-name":{pattern:/((?:(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/gi,lookbehind:true,inside:{punctuation:/(\.|\\)/}},keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/g,"boolean":/\b(true|false)\b/g,"function":{pattern:/[a-z0-9_]+\(/gi,inside:{punctuation:/\(/}},number:/\b-?(0x[\dA-Fa-f]+|\d*\.?\d+([Ee]-?\d+)?)\b/g,operator:/[-+]{1,2}|!|&lt;=?|>=?|={1,3}|(&amp;){1,2}|\|?\||\?|\*|\/|\~|\^|\%/g,ignore:/&(lt|gt|amp);/gi,punctuation:/[{}[\];(),.:]/g};Prism.languages.javascript=Prism.languages.extend("clike",{keyword:/\b(var|let|if|else|while|do|for|return|in|instanceof|function|get|set|new|with|typeof|try|throw|catch|finally|null|break|continue|this)\b/g,number:/\b-?(0x[\dA-Fa-f]+|\d*\.?\d+([Ee]-?\d+)?|NaN|-?Infinity)\b/g});Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^\/])\/(?!\/)(\[.+?]|\\.|[^\/\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/g,lookbehind:true}});if(Prism.languages.markup){Prism.languages.insertBefore("markup","tag",{script:{pattern:/(&lt;|<)script[\w\W]*?(>|&gt;)[\w\W]*?(&lt;|<)\/script(>|&gt;)/gi,inside:{tag:{pattern:/(&lt;|<)script[\w\W]*?(>|&gt;)|(&lt;|<)\/script(>|&gt;)/gi,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.javascript}}})}(function(){if(!self.Prism||!self.document||!document.querySelector){return}var Extensions={js:"javascript",html:"markup",svg:"markup"};Array.prototype.slice.call(document.querySelectorAll("pre[data-src]")).forEach(function(pre){var src=pre.getAttribute("data-src");var extension=(src.match(/\.(\w+)$/)||[,""])[1];var language=Extensions[extension]||extension;var code=document.createElement("code");code.className="language-"+language;pre.textContent="";code.textContent="Loading…";pre.appendChild(code);var xhr=new XMLHttpRequest;xhr.open("GET",src,true);xhr.onreadystatechange=function(){if(xhr.readyState==4){if(xhr.status<400&&xhr.responseText){code.textContent=xhr.responseText;Prism.highlightElement(code)}else if(xhr.status>=400){code.textContent="✖ Error "+xhr.status+" while fetching file: "+xhr.statusText}else{code.textContent="✖ Error: File does not exist or is empty"}}};xhr.send(null)})})()},{}],4:[function(require,module,exports){var prism=require("../3rdparty/prism"),defaultTheme={prismComment:"#708090",prismProlog:"prismComment",prismDoctype:"prismComment",prismCdata:"prismComment",prismPunctuation:"#999",prismSymbol:"#905",prismProperty:"prismSymbol",prismTag:"prismSymbol",prismBoolean:"prismSymbol",prismNumber:"prismSymbol",prismConstant:"prismSymbol",prismDeleted:"prismSymbol",prismString:"#690",prismSelector:"prismString",prismAttrName:"prismString",prismChar:"prismString",prismBuiltin:"prismString",prismInserted:"prismString",prismOperator:"#a67f59",prismVariable:"prismOperator",prismEntity:"prismOperator",prismUrl:"prismOperator",prismCssString:"prismOperator",prismKeyword:"#07a",prismAtrule:"prismKeyword",prismAttrValue:"prismKeyword",prismFunction:"#DD4A68",prismRegex:"#e90",prismImportant:["#e90","bold"]},languageMapping={"text/html":"markup","application/xml":"markup","text/xml":"markup","application/json":"javascript","text/javascript":"javascript","application/javascript":"javascript","text/css":"css",html:"markup",xml:"markup",c:"clike","c++":"clike",cpp:"clike","c#":"clike",java:"clike"};function upperCamelCase(str){return str.replace(/(?:^|-)([a-z])/g,function($0,ch){return ch.toUpperCase()})}module.exports={name:"magicpen-prism",version:require("../package.json").version,installInto:function(magicPen){magicPen.installTheme(defaultTheme);magicPen.addStyle("code",function(sourceText,language){if(language in languageMapping){language=languageMapping[language]}else if(/\+xml\b/.test(language)){language="markup"}if(!(language in prism.languages)){return this.text(sourceText)}sourceText=sourceText.replace(/</g,"&lt;");var that=this,capitalizedLanguage=upperCamelCase(language);function printTokens(token,parentStyle){if(Array.isArray(token)){token.forEach(function(subToken){printTokens(subToken,parentStyle)})}else if(typeof token==="string"){var upperCamelCasedParentStyle=upperCamelCase(parentStyle);token=token.replace(/&lt;/g,"<");if(that["prism"+capitalizedLanguage+upperCamelCasedParentStyle]){that["prism"+capitalizedLanguage+upperCamelCasedParentStyle](token)}else if(that["prism"+upperCamelCasedParentStyle]){that["prism"+upperCamelCasedParentStyle](token)}else{that.text(token)}}else{printTokens(token.content,token.type)}}printTokens(prism.tokenize(sourceText,prism.languages[language]),"text")},true)}}},{"../3rdparty/prism":3,"../package.json":5}],5:[function(require,module,exports){module.exports={_args:[[{raw:"magicpen-prism@^2.2.1",scope:null,escapedName:"magicpen-prism",name:"magicpen-prism",rawSpec:"^2.2.1",spec:">=2.2.1 <3.0.0",type:"range"},"/Users/munter/git/unexpected-dom"]],_from:"magicpen-prism@>=2.2.1 <3.0.0",_id:"magicpen-prism@2.2.1",_inCache:true,_location:"/magicpen-prism",_nodeVersion:"0.10.40",_npmUser:{name:"papandreou",email:"andreas@one.com"},_npmVersion:"2.14.2",_phantomChildren:{},_requested:{raw:"magicpen-prism@^2.2.1",scope:null,escapedName:"magicpen-prism",name:"magicpen-prism",rawSpec:"^2.2.1",spec:">=2.2.1 <3.0.0",type:"range"},_requiredBy:["/"],_resolved:"https://registry.npmjs.org/magicpen-prism/-/magicpen-prism-2.2.1.tgz",_shasum:"90a224968b512f769506dc65188995821681b631",_shrinkwrap:null,_spec:"magicpen-prism@^2.2.1",_where:"/Users/munter/git/unexpected-dom",author:{name:"Andreas Lind Petersen",email:"andreas@one.com"},bugs:{url:"https://github.com/unexpectedjs/magicpen-prism/issues"},dependencies:{},description:"Add syntax highlighting support to magicpen via prism.js",devDependencies:{browserify:"8.1.1","bundle-collapser":"1.1.1",jshint:"2.7.0",magicpen:"4.3.1",mocha:"1.21.4",unexpected:"5.8.0"},directories:{},dist:{shasum:"90a224968b512f769506dc65188995821681b631",tarball:"https://registry.npmjs.org/magicpen-prism/-/magicpen-prism-2.2.1.tgz"},files:["lib","magicPenPrism.min.js","3rdparty/prism.js"],gitHead:"88da937c20daf1a11dd4206e5dcfe036109f5ce9",homepage:"https://github.com/unexpectedjs/magicpen-prism#readme",main:"lib/magicPenPrism.js",maintainers:[{name:"papandreou",email:"andreas@one.com"},{name:"sunesimonsen",email:"sune@we-knowhow.dk"}],name:"magicpen-prism",optionalDependencies:{},readme:"ERROR: No README data found!",repository:{type:"git",url:"git+https://github.com/unexpectedjs/magicpen-prism.git"},scripts:{lint:"jshint .",prepublish:"browserify -p bundle-collapser/plugin -e lib/magicPenPrism -s magicPenPrism > magicPenPrism.min.js",test:"mocha",travis:"npm run lint && npm test"},version:"2.2.1"}},{}]},{},[1])(1)});